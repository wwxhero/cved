//////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright 1998 by NADS & Simulation Center, The University of
//     Iowa.  All rights reserved.
//
// Version:     $Id: dynobj.inl,v 1.9 2018/03/23 20:41:19 IOWA\dheitbri Exp $
//
// Author(s):   Yiannis Papelis
// Date:        August, 1998
//
// Description: The inline functions for the CDynObj class and its subclasses.
//
//////////////////////////////////////////////////////////////////////////////
#ifndef __DYN_OBJ_INL
#define __DYN_OBJ_INL // {secret}

#include "dynobj.h"

//////////////////////////////////////////////////////////////////////////////
//	CDynObj functions
//////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CDynObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CDynObj::CDynObj()
	: CObj(),
	  m_readOnly(false)
{} // end of CDynObj

/////////////////////////////////////////////////////////////////////////////
//
// Description: CDynObj
// 	Copy constructor initializes the current object with the parameter.
//
// Remarks: Assigns the paramter to the current object.
//
// Arguments:
//  cCopy - the copy of a class to initialize the current instance
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CDynObj::CDynObj(const CDynObj &cCopy)
{
	*this = cCopy;
}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CDynObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CDynObj::CDynObj( const CCved& cCved, TObj* pSlot )
	: CObj( cCved, pSlot ),
	  m_readOnly(false)
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: MakeReadOnly
// 	Makes the current CDynObj instance a "read only" object.
//
// Remarks: This function is used by the CCved function BindObjToClass,
// 	where a CDynObj instance is created and stored for future access.  This
// 	CDynObj instance is used only for accessing the data in the "real"
// 	dynamic object, not for modifying or deleting the object.  Therefore,
// 	if the BinObjToClass's CDynObj instance is deleted, it should not delete
// 	the memory associated with the dynamic object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline void
CDynObj::MakeReadOnly(void)
{
	m_readOnly = true;
}


/////////////////////////////////////////////////////////////////////////////
//	CTrajFollowerObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CTrajFollowerObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrajFollowerObj::CTrajFollowerObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CTrajFollowerObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrajFollowerObj::~CTrajFollowerObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CTrajFollowerObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure.
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrajFollowerObj::CTrajFollowerObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{
	//InitModeValues();
}


/////////////////////////////////////////////////////////////////////////////
//	CVehicleObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CVehicleObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CVehicleObj::CVehicleObj()
	: CDynObj()
{
}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CVehicleObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CVehicleObj::~CVehicleObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CVehicleObj::CVehicleObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CTrailerObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CTrailerObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrailerObj::CTrailerObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CTrailerObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrailerObj::~CTrailerObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CTrailerObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrailerObj::CTrailerObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CExternalTrailerObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CExternalTrailerObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CExternalTrailerObj::CExternalTrailerObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CExternalTrailerObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CExternalTrailerObj::~CExternalTrailerObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CExternalTrailerObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CExternalTrailerObj::CExternalTrailerObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}

/////////////////////////////////////////////////////////////////////////////
//	CRailVehObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CRailVehObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CRailVehObj::CRailVehObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CRailVehObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CRailVehObj::~CRailVehObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CRailVehObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CRailVehObj::CRailVehObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CTerrainObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CTerrainObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTerrainObj::CTerrainObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CTerrainObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTerrainObj::~CTerrainObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTerrainObj::CTerrainObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CTrafficLightObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CTrafficLightObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrafficLightObj::CTrafficLightObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CTrafficLightObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrafficLightObj::~CTrafficLightObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CTrafficLightObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrafficLightObj::CTrafficLightObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CTrafficSignObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CTrafficSignObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrafficSignObj::CTrafficSignObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CTrafficSignObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrafficSignObj::~CTrafficSignObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CTrafficSignObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CTrafficSignObj::CTrafficSignObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CCompositeSignObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CSignObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CCompositeSignObj::CCompositeSignObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CCompositeSignObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CCompositeSignObj::~CCompositeSignObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CSignObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CCompositeSignObj::CCompositeSignObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CObstacleObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CObstacleObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CObstacleObj::CObstacleObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CObstacleObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CObstacleObj::~CObstacleObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CObstacleObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CObstacleObj::CObstacleObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CPoiObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CPoiObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CPoiObj::CPoiObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CPoiObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CPoiObj::~CPoiObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CPoiObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CPoiObj::CPoiObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CCoordinatorObjectObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CCoordinatorObjectObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CCoordinatorObjectObj::CCoordinatorObjectObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CCoordinatorObjectObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CCoordinatorObjectObj::~CCoordinatorObjectObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CCoordinatorObjectObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CCoordinatorObjectObj::CCoordinatorObjectObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}

/////////////////////////////////////////////////////////////////////////////
//	CExternalDriverObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CExternalDriverObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CExternalDriverObj::CExternalDriverObj()
	: CVehicleObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CExternalDriverObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CExternalDriverObj::~CExternalDriverObj()
{}



inline CExternalVehObj::CExternalVehObj(){};
inline CExternalVehObj::~CExternalVehObj(){};
inline CExternalVehObj::CExternalVehObj( const CExternalVehObj& obj ):CVehicleObj(obj){};
/////////////////////////////////////////////////////////////////////////
//
// Description:
// This class represents visual object.  These are invisible
// entities used to coordinate scenarios during execution.
//
inline
CVisualObjectObj::CVisualObjectObj():CDynObj(){};
inline
	CVisualObjectObj::~CVisualObjectObj(){};
inline
	CVisualObjectObj::CVisualObjectObj( const CVisualObjectObj& obj):CDynObj(obj){};
inline
	CVisualObjectObj::CVisualObjectObj( const CCved& cved, TObj* obj):CDynObj(cved,obj){};

/////////////////////////////////////////////////////////////////////////////
//
// Description: CExternalDriver
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CExternalDriverObj::CExternalDriverObj( const CCved& cCved, TObj* pSlot )
	:	CVehicleObj( cCved, pSlot )
{}


/////////////////////////////////////////////////////////////////////////////
//	CWalkerObj functions
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
// Description: CWalkerObj
// 	Default constructor initializes the local variables.
//
// Remarks: This constructor builds an unbound object.
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CWalkerObj::CWalkerObj()
	: CDynObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: ~CWalkerObj
// 	Default destructor does nothing.
//
// Remarks:
//
// Arguments:
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CWalkerObj::~CWalkerObj()
{}

/////////////////////////////////////////////////////////////////////////////
//
// Description: CWalkerObj
// 	Constructor that takes a CCved instance and a cvTObj
//
// Remarks: This constructor creates a bound object that is associated with
// 	the given cvTObj structure
//
// Arguments:
//  cCved - reference to CCved instance to which the object is bound
//  pSlot - pointer to a cvTObj instance to which the object is associated
//
// Returns: void
//
/////////////////////////////////////////////////////////////////////////////
inline
CWalkerObj::CWalkerObj( const CCved& cCved, TObj* pSlot )
	:	CDynObj( cCved, pSlot )
{}

}		// namespace CVED

#endif // __DYN_OBJ_INL

